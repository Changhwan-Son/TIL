# 2020.07.03 TIL

## 부스트코스 웹 풀스택 과정 시작!!

### 첫 강의 웹 프로그래밍 기초 소개

**학습 목표**

1. 웹에 대한 기본 이해를 한다.
2. 웹클라이언트와 웹백엔드의 역할을 안다.
3. HTML 구조화 설계를 할 수 있다
4. CSS 기본 스타일을 꾸밀 수 있다.
5. JAVA기반의 웹 백엔드 환경을 구성할 수 있다.
6. 서블릿을 이해하고 기본 구성을 할 수 있다

인터넷 

- TCP/IP 기반의 네트워크가 전세계적으로 확대되어 하나로 연결된 네트워크들의 네트워크

HTTP Hypertext Tranfer Protocol 

- 서버와 클라이언트가 인터넷상에서 데이터를 주고 받기 위한 프로토콜
- 서버/클라이언트 모델을 따름 - 클라이언트가 먼저 서버에 요청을 보내고 서버가 클라이언트에 응답을 보냄
- 장점 : 불특정 다수를 대상으로 하는 서비스에 적합. 클라이언트와 서버가 계속 연결된 형태가 아니기 때문에 클라이언트와 서버 간의 최대 연결수보다 훨씬 많은 요청과 응답을 처리할 수 있음.
- 단점 : 연결을 끊어버리기 때문에, 클라이언트의 이전 상황을 알 수가 없음. 이러한 특징을 무상태(stateless)라고 말함. 이러한 특징 때문에 정보를 유지하기 위해서 Cookie와 같은 기술이 등장

URL Uniform Resource Locator

- 인터넷 상의 자원의 위치
- 특정 웹 서버의 특정 파일에 접근하기 위한 경로 혹은 주소
- [http://www.subbtvale.co.kr/docs/index.html](http://www.subbtvale.co.kr/docs/index.html)
- 접근프로토콜://IP 주소 또는 도메인 이름/문서의 경로/문서 이름

IP : 집 주소 , 포트 : 방  이라고 생각하면 편함 

![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/df4499cc-bf26-478a-998f-464d4edf6cf0/_2020-07-03__6.25.21.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/df4499cc-bf26-478a-998f-464d4edf6cf0/_2020-07-03__6.25.21.png)

웹 동작 과정 

1. 클라이언트가 원하는 서버에 접속 
2. 클라이언트가 서버에 요청 
3. 요청에 따른 응답 결과를 서버가 클라이언트에 전송 
4. 서버와 클라이언트의 연결 끊김 

요청 데이터 포맷 

- 헤더 - 빈 줄 - 바디
- 헤더 : 요청 메서드 (GET 등)  - 요청 URI(요청하는 자원의 위치 명시) - 프로토콜 버전
- 바디 요소는 요청 메서드가 POST나 PUT일 경우에 들어온다

응답 데이터 포맷 

- 헤더 - 빈 줄- 바디
- 첫 줄에는 반드시 응답 HTTP 프로토콜 버전, 응답 코드, 응답 메세지
- 나머지 헤더 부분에는 날짜, 웹서버 이름 , 버전 콘텐츠 타입  등
- 빈 줄 다음에는 실제 응답 리소스 데이터

웹 프론트엔드

- 사용자에게 웹을 통해 다양한 콘텐츠(문서, 동영상, 사진 등)을 제공한다. 또한 사용자의 요청(요구사항)에 반응해서 동작한다.

웹 프론트엔드 역할

- 웹 콘텐츠를 잘 보여주기 위해 구조를 만들어야 함(신문, 책 등과 같이)
적절한 배치와 일관된 디자인 등을 제공해야 함 (보기좋게) 
사용자 요청을 잘 반영해야 함
- 순서대로 HTML   CSS   Javascript

웹 백엔드  

- 프론트엔드가 프로그램의 앞 쪽, 클라이언트의 입장에서 개발이 진행이 된다면 백엔드는 프로그램의 뒷 부분 쪽, 즉 서버 입장에서의 개발이 진행
- 프론트엔드를 다른 말로 클라이언트 사이드라고 말한다면, 백엔드는 서버 사이드라고 말한다.

백엔드 개발자가 알아야 할 것들 

- 프로그래밍 언어
- 웹의 동작 원리
- 알고리즘, 자료구조 등 프로그래밍 기반 지식
- 운영체제, 네트워크 등에 대한 이해
- 프레임워크에 대한 이해
- DBMS에 대한 이해와 사용방법